syntax = "proto3";

package com.example.grpc;
option java_multiple_files=true;

message MenuRequest{
  string request = 1;
}
message MenuResponse{
  repeated string menuList = 1;
}
message StudentListResponse{
  repeated string studentList = 1;
}
message CourseListResponse{
  repeated string courseList = 1;
}
message ChoiceRequest{
  string number = 1;
}
message ResultOfChoiceResponse{
  string result = 1;
}
message Course{
  string id = 1;
  string name = 2;
  string prof_name = 3;
  repeated string preCourses = 4;
}
message Student{
  string id = 1;
  string name = 2;
  string major = 3;
}
message StatusCode{
  string statusCode = 1;
  string message = 2;
}
message CourseId{
  string courseId = 1;
}
message StudentId{
  string studentId = 1;
}

//Server부분 데이터 정의
service StudentCourseRegistrationSystem{
  // 메뉴출력
  rpc getMenu(MenuRequest) returns (MenuResponse);

  //학생, 과목 리스트 출력
  rpc getListData(ListDataRequest) returns (ListDataResponse);

  //add Course
  rpc putCourse(Course) returns (StatusCode);

  //add Student
  rpc putStudent(Student) returns (StatusCode);

  //delete Course
  rpc deleteCourseById(CourseId) returns (StatusCode);

  //delete Student
  rpc deleteStudentById(StudentId) returns (StatusCode);

  //수강신청
  rpc updateStudentWithCourse(StudentAndCourseId) returns (StatusCode);
}
message ListDataRequest{
  string studentOrCourse = 1;
}
message ListDataResponse{
  repeated string data = 1;
}
message CourseInfoString{
  string courseInfo = 1;
}
message StudentInfoString{
  string studentInfo = 1;
}
message StudentAndCourseId{
  string studentId = 1;
  string courseId = 2;
}
//Data부분 Service정의
service DataService{
  //과목 또는 학생 정보 리스트 전달하기
  rpc getListData(ListDataRequest) returns (ListDataResponse);

  //특정 ID의 학생. 강좌가 있는 지 확인하기
  rpc getStudentById(StudentId) returns (StatusCode);
  rpc getCourseById(CourseId) returns (StatusCode);

  //add Course
  rpc putCourse(CourseInfoString) returns (StatusCode);

  //add Student
  rpc putStudent(StudentInfoString) returns (StatusCode);

  //delete Course
  rpc deleteCourseById(CourseId) returns (StatusCode);

  //delete Student
  rpc deleteStudentById(StudentId) returns (StatusCode);

  //수강신청
  rpc updateStudentWithCourse(StudentAndCourseId) returns (StatusCode);
}


